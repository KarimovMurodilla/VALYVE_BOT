import os
import time
from datetime import datetime
from aiogram import Bot
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from app import connection, config, buttons

scheduler = AsyncIOScheduler()
bot = Bot(token=config.TOKEN, parse_mode = 'html')


async def pay_for_waiter():
    connection.getResponses()
    mailing = [await bot.send_message(i[2], f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n\n–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ <code>{i[0]} ‚ÇΩ</code> –Ω–∞ –±–∞–ª–∞–Ω—Å, –∑–∞ –æ–∂–∏–¥–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ <code>{connection.selectAll(i[1])[0]}</code>") 
        for i in connection.getResponses(to_mail = True)]


async def check_order_deletion_date():
    send = [x for x in connection.checkDeletionDate(send_finish = True)]
    try:
        for i in send:
            connection.updateBalance(i[0], int(connection.selectMyFreezingMoneys(i[0], i[1])), '+')
            await bot.send_message(i[0], "üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:</b>\n\n"
                                         f"–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º #1 –±—ã–ª–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ù–∞ –í–∞—à —Å—á—ë—Ç –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ <code>{connection.selectMyFreezingMoneys(i[0], i[1])} ‚ÇΩ</code> –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤")
            connection.updateFreezingMoney(connection.selectMyFreezingMoneys(i[0], i[1]), i[0], i[1])

            if connection.selectMyPerInOrderId(i[0], i[1])[0]:
                await bot.send_message(i[0], "–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è?", reply_markup = buttons.askPutRate(i[0], i[1]))
    except Exception as e:
        print(e)
    
    connection.checkDeletionDate()

def schedule_jobs():
    scheduler.add_job(pay_for_waiter, 'interval', minutes=1)
    scheduler.add_job(check_order_deletion_date, 'interval', seconds=30)
